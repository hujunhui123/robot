<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="hust.plane.mapper.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="hust.plane.mapper.pojo.User">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="Name" property="name" jdbcType="VARCHAR"/>
        <result column="PassWord" property="password" jdbcType="VARCHAR"/>
        <result column="NickName" property="nickname" jdbcType="VARCHAR"/>
        <result column="WorkNumber" property="worknumber" jdbcType="VARCHAR"/>
        <result column="Email" property="email" jdbcType="VARCHAR"/>
        <result column="CreateTime" property="createtime" jdbcType="TIMESTAMP"/>
        <result column="UpdateTime" property="updatetime" jdbcType="TIMESTAMP"/>
        <result column="Department_id" property="departmentId" jdbcType="INTEGER"/>
        <result column="PhoneOne" property="phoneone" jdbcType="VARCHAR"/>
        <result column="PhoneTwo" property="phonetwo" jdbcType="VARCHAR"/>
        <result column="Icon" property="icon" jdbcType="VARCHAR"/>
        <result column="TaskNum" property="tasknum" jdbcType="INTEGER"/>
        <result column="Description" property="description" jdbcType="VARCHAR"/>
        <result column="HistoryPoint" property="historypoint" jdbcType="OTHER"/>
        <result column="HistoryZoom" property="historyzoom" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, Name, PassWord, NickName, WorkNumber, Email, CreateTime, UpdateTime, Department_id,
        PhoneOne, PhoneTwo, Icon, TaskNum, Description, HistoryPoint, HistoryZoom
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="hust.plane.mapper.pojo.UserExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from K_User
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from K_User
        where id = #{id,jdbcType=INTEGER}
    </select>

    <insert id="insert" parameterType="hust.plane.mapper.pojo.User">
        insert into K_User (id, Name, PassWord,
        NickName, WorkNumber, Email,
        CreateTime, UpdateTime, Department_id,
        PhoneOne, PhoneTwo, Icon,
        TaskNum, Description, HistoryPoint,
        HistoryZoom)
        values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
        #{nickname,jdbcType=VARCHAR}, #{worknumber,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
        #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, #{departmentId,jdbcType=INTEGER},
        #{phoneone,jdbcType=VARCHAR}, #{phonetwo,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR},
        #{tasknum,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{historypoint,jdbcType=OTHER},
        #{historyzoom,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="hust.plane.mapper.pojo.User">
        insert into K_User
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                Name,
            </if>
            <if test="password != null">
                PassWord,
            </if>
            <if test="nickname != null">
                NickName,
            </if>
            <if test="worknumber != null">
                WorkNumber,
            </if>
            <if test="email != null">
                Email,
            </if>
            <if test="createtime != null">
                CreateTime,
            </if>
            <if test="updatetime != null">
                UpdateTime,
            </if>
            <if test="departmentId != null">
                Department_id,
            </if>
            <if test="phoneone != null">
                PhoneOne,
            </if>
            <if test="phonetwo != null">
                PhoneTwo,
            </if>
            <if test="icon != null">
                Icon,
            </if>
            <if test="tasknum != null">
                TaskNum,
            </if>
            <if test="description != null">
                Description,
            </if>
            <if test="historypoint != null">
                HistoryPoint,
            </if>
            <if test="historyzoom != null">
                HistoryZoom,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="worknumber != null">
                #{worknumber,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="createtime != null">
                #{createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="updatetime != null">
                #{updatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="departmentId != null">
                #{departmentId,jdbcType=INTEGER},
            </if>
            <if test="phoneone != null">
                #{phoneone,jdbcType=VARCHAR},
            </if>
            <if test="phonetwo != null">
                #{phonetwo,jdbcType=VARCHAR},
            </if>
            <if test="icon != null">
                #{icon,jdbcType=VARCHAR},
            </if>
            <if test="tasknum != null">
                #{tasknum,jdbcType=INTEGER},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="historypoint != null">
                #{historypoint,jdbcType=OTHER},
            </if>
            <if test="historyzoom != null">
                #{historyzoom,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>


    <insert id="insertSelectiveWithIdInc" parameterType="hust.plane.mapper.pojo.User" useGeneratedKeys="true"
            keyProperty="id">
        insert into K_User(name,password, createtime) values (#{name,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR},
        #{createtime,jdbcType=TIMESTAMP})
    </insert>

    <insert id="insertSelectiveIdInc" parameterType="hust.plane.mapper.pojo.User" useGeneratedKeys="true"
            keyProperty="id">
        insert into K_User
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                Name,
            </if>
            <if test="password != null">
                PassWord,
            </if>
            <if test="nickname != null">
                NickName,
            </if>
            <if test="worknumber != null">
                WorkNumber,
            </if>
            <if test="email != null">
                Email,
            </if>
            <if test="createtime != null">
                CreateTime,
            </if>
            <if test="updatetime != null">
                UpdateTime,
            </if>
            <if test="departmentId != null">
                Department_id,
            </if>
            <if test="phoneone != null">
                PhoneOne,
            </if>
            <if test="phonetwo != null">
                PhoneTwo,
            </if>
            <if test="icon != null">
                Icon,
            </if>
            <if test="tasknum != null">
                TaskNum,
            </if>
            <if test="description != null">
                Description,
            </if>
            <if test="historypoint != null">
                HistoryPoint,
            </if>
            <if test="historyzoom != null">
                HistoryZoom,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="worknumber != null">
                #{worknumber,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="createtime != null">
                #{createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="updatetime != null">
                #{updatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="departmentId != null">
                #{departmentId,jdbcType=INTEGER},
            </if>
            <if test="phoneone != null">
                #{phoneone,jdbcType=VARCHAR},
            </if>
            <if test="phonetwo != null">
                #{phonetwo,jdbcType=VARCHAR},
            </if>
            <if test="icon != null">
                #{icon,jdbcType=VARCHAR},
            </if>
            <if test="tasknum != null">
                #{tasknum,jdbcType=INTEGER},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="historypoint != null">
                #{historypoint,jdbcType=OTHER},
            </if>
            <if test="historyzoom != null">
                #{historyzoom,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <select id="selectByUserName" parameterType="java.lang.String" resultType="java.lang.Integer">
        select count(*) from K_User
        where name=#{name,jdbcType=VARCHAR}
    </select>

    <!--<select id="selectByUserNameAndRole" parameterType="java.lang.String" resultType="java.lang.Integer">-->
    <!--select count(*) from K_User-->
    <!--where name=#{param1,jdbcType=VARCHAR} And role = #{param2}-->
    <!--</select>-->

    <select id="selectUserCount" resultType="java.lang.Integer">
        select count(1) from K_User
    </select>

    <select id="selectAllUser" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from K_User
        LIMIT #{page.startIndex, jdbcType=INTEGER} , #{page.pageSize, jdbcType=INTEGER}
    </select>

    <select id="countByExample" parameterType="hust.plane.mapper.pojo.UserExample" resultType="java.lang.Integer">
        select count(*) from K_User
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>

    <!--<select id="selectCountWithRole" parameterType="java.lang.String" resultType="java.lang.Integer">-->
    <!--select count(*) from user-->
    <!--where role = #{Role}-->
    <!--</select>-->

    <!--<select id="selectUserByRole" resultMap="BaseResultMap">-->
    <!--select-->
    <!--<include refid="Base_Column_List"/>-->
    <!--from user-->
    <!--where 1=1 AND role = #{role}-->
    <!--LIMIT #{page.startIndex, jdbcType=INTEGER} , #{page.pageSize, jdbcType=INTEGER}-->
    <!--</select>-->


    <update id="updateByExampleSelective" parameterType="map">
        update K_User
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.name != null">
                Name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                PassWord = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.nickname != null">
                NickName = #{record.nickname,jdbcType=VARCHAR},
            </if>
            <if test="record.worknumber != null">
                WorkNumber = #{record.worknumber,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                Email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.createtime != null">
                CreateTime = #{record.createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updatetime != null">
                UpdateTime = #{record.updatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.departmentId != null">
                Department_id = #{record.departmentId,jdbcType=INTEGER},
            </if>
            <if test="record.phoneone != null">
                PhoneOne = #{record.phoneone,jdbcType=VARCHAR},
            </if>
            <if test="record.phonetwo != null">
                PhoneTwo = #{record.phonetwo,jdbcType=VARCHAR},
            </if>
            <if test="record.icon != null">
                Icon = #{record.icon,jdbcType=VARCHAR},
            </if>
            <if test="record.tasknum != null">
                TaskNum = #{record.tasknum,jdbcType=INTEGER},
            </if>
            <if test="record.description != null">
                Description = #{record.description,jdbcType=VARCHAR},
            </if>
            <if test="record.historypoint != null">
                HistoryPoint = #{record.historypoint,jdbcType=OTHER},
            </if>
            <if test="record.historyzoom != null">
                HistoryZoom = #{record.historyzoom,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update K_User
        set id = #{record.id,jdbcType=INTEGER},
        Name = #{record.name,jdbcType=VARCHAR},
        PassWord = #{record.password,jdbcType=VARCHAR},
        NickName = #{record.nickname,jdbcType=VARCHAR},
        WorkNumber = #{record.worknumber,jdbcType=VARCHAR},
        Email = #{record.email,jdbcType=VARCHAR},
        CreateTime = #{record.createtime,jdbcType=TIMESTAMP},
        UpdateTime = #{record.updatetime,jdbcType=TIMESTAMP},
        Department_id = #{record.departmentId,jdbcType=INTEGER},
        PhoneOne = #{record.phoneone,jdbcType=VARCHAR},
        PhoneTwo = #{record.phonetwo,jdbcType=VARCHAR},
        Icon = #{record.icon,jdbcType=VARCHAR},
        TaskNum = #{record.tasknum,jdbcType=INTEGER},
        Description = #{record.description,jdbcType=VARCHAR},
        HistoryPoint = #{record.historypoint,jdbcType=OTHER},
        HistoryZoom = #{record.historyzoom,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="hust.plane.mapper.pojo.User">
        update K_User
        <set>
            <if test="name != null">
                Name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                PassWord = #{password,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                NickName = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="worknumber != null">
                WorkNumber = #{worknumber,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                Email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="createtime != null">
                CreateTime = #{createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="updatetime != null">
                UpdateTime = #{updatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="departmentId != null">
                Department_id = #{departmentId,jdbcType=INTEGER},
            </if>
            <if test="phoneone != null">
                PhoneOne = #{phoneone,jdbcType=VARCHAR},
            </if>
            <if test="phonetwo != null">
                PhoneTwo = #{phonetwo,jdbcType=VARCHAR},
            </if>
            <if test="icon != null">
                Icon = #{icon,jdbcType=VARCHAR},
            </if>
            <if test="tasknum != null">
                TaskNum = #{tasknum,jdbcType=INTEGER},
            </if>
            <if test="description != null">
                Description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="historypoint != null">
                HistoryPoint = #{historypoint,jdbcType=OTHER},
            </if>
            <if test="historyzoom != null">
                HistoryZoom = #{historyzoom,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="hust.plane.mapper.pojo.User">
        update K_User
        set Name = #{name,jdbcType=VARCHAR},
        PassWord = #{password,jdbcType=VARCHAR},
        NickName = #{nickname,jdbcType=VARCHAR},
        WorkNumber = #{worknumber,jdbcType=VARCHAR},
        Email = #{email,jdbcType=VARCHAR},
        CreateTime = #{createtime,jdbcType=TIMESTAMP},
        UpdateTime = #{updatetime,jdbcType=TIMESTAMP},
        Department_id = #{departmentId,jdbcType=INTEGER},
        PhoneOne = #{phoneone,jdbcType=VARCHAR},
        PhoneTwo = #{phonetwo,jdbcType=VARCHAR},
        Icon = #{icon,jdbcType=VARCHAR},
        TaskNum = #{tasknum,jdbcType=INTEGER},
        Description = #{description,jdbcType=VARCHAR},
        HistoryPoint = #{historypoint,jdbcType=OTHER},
        HistoryZoom = #{historyzoom,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from K_User
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="hust.plane.mapper.pojo.UserExample">
        delete from K_User
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <select id="getNameByUserId" parameterType="java.lang.Integer"
            resultType="java.lang.String">
        select Name
        from K_User
        where id=#{id,jdbcType=INTEGER}
    </select>
    <update id="userAddTasknum" parameterType="hust.plane.mapper.pojo.User">
        update K_User
        set TaskNum = TaskNum + 1
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <update id="userReduceTasknum" parameterType="hust.plane.mapper.pojo.User">
        update K_User
        set TaskNum = TaskNum - 1
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <update id="updateLastTime" parameterType="java.lang.String">
        update K_User
        set UpdateTime = NOW()
        where Name=#{param1}
    </update>

    <select id="selectUserByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from K_User
        where Name=#{param1}
    </select>
    <select id="countByWorkNumber" parameterType="java.lang.String" resultType="java.lang.Integer">
        select count(*) from K_User
        where WorkNumber = #{worknumber,jdbcType=VARCHAR}
    </select>
    <select id="selectCountByFuzzyName" parameterType="java.lang.String" resultType="java.lang.Integer">
        select count(*) from K_User
        where Name LIKE concat('%',#{Name},'%')
    </select>
    <select id="getUserByName" parameterType="java.lang.String" resultType="hust.plane.mapper.pojo.User">
        select id
        from K_User
        where Name = #{name,jdbcType=VARCHAR}
    </select>
    <select id="selectByFuzzyNameWithPage" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from K_User
        where NAME LIKE concat('%',#{Name},'%')
        LIMIT #{param2.startIndex, jdbcType=INTEGER} , #{param2.pageSize, jdbcType=INTEGER}
    </select>

    <select id="selectUserIdByUserName" parameterType="java.lang.String" resultType="java.lang.Integer">
        select id from K_User
        where Name = #{param1}
    </select>

    <select id="selectByUserWorkNumber" parameterType="java.lang.String" resultType="java.lang.Integer">
        select count(*) from K_User
        where WorkNumber = #{addUserWorkNumber}
    </select>
</mapper>